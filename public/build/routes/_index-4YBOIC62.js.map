{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1712808153531.0237\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from '@remix-run/cloudflare';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport invariant from 'tiny-invariant';\nimport { Button, ButtonLink } from '~/components/Button';\nimport { Disclaimer } from '~/components/Disclaimer';\nimport { Input } from '~/components/Input';\nimport { Label } from '~/components/Label';\nimport { useUserMetadata } from '~/hooks/useUserMetadata';\nimport { ACCESS_AUTHENTICATED_USER_EMAIL_HEADER } from '~/utils/constants';\nimport getUsername from '~/utils/getUsername.server';\nexport const loader = async ({\n  request,\n  context\n}) => {\n  const directoryUrl = context.USER_DIRECTORY_URL;\n  const username = await getUsername(request);\n  invariant(username);\n  const usedAccess = request.headers.has(ACCESS_AUTHENTICATED_USER_EMAIL_HEADER);\n  return json({\n    username,\n    usedAccess,\n    directoryUrl\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const room = (await request.formData()).get('room');\n  invariant(typeof room === 'string');\n  return redirect(room.replace(/ /g, '-'));\n};\nexport default function Index() {\n  _s();\n  const {\n    username,\n    usedAccess\n  } = useLoaderData();\n  const {\n    data\n  } = useUserMetadata(username);\n  return <div className=\"flex flex-col items-center justify-center h-full p-4 mx-auto\">\n\t\t\t<div className=\"flex-1\"></div>\n\t\t\t<div className=\"space-y-6\">\n\t\t\t\t<div>\n\t\t\t\t\t<h1 className=\"text-3xl font-bold\">\uD83C\uDF4A Orange Meets</h1>\n\t\t\t\t\t<div className=\"flex items-center justify-between gap-3\">\n\t\t\t\t\t\t<p className=\"text-sm text-zinc-500 dark:text-zinc-400\">\n\t\t\t\t\t\t\tLogged in as {data?.displayName}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t{!usedAccess && <a className=\"block text-sm underline text-zinc-500 hover:text-zinc-700 dark:text-zinc-400 dark:hover:text-zinc-200\" href=\"/set-username\">\n\t\t\t\t\t\t\t\tChange\n\t\t\t\t\t\t\t</a>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<ButtonLink to=\"/new\" className=\"text-sm\">\n\t\t\t\t\t\tNew Room\n\t\t\t\t\t</ButtonLink>\n\t\t\t\t</div>\n\t\t\t\t<details className=\"cursor-pointer\">\n\t\t\t\t\t<summary className=\"text-zinc-500 dark:text-zinc-400\">\n\t\t\t\t\t\tOr join a room\n\t\t\t\t\t</summary>\n\t\t\t\t\t<Form className=\"flex items-end w-full gap-4 pt-4\" method=\"post\">\n\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t<Label htmlFor=\"room\">Room name</Label>\n\t\t\t\t\t\t\t<Input name=\"room\" id=\"room\" required />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button className=\"text-xs\" type=\"submit\" displayType=\"secondary\">\n\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</details>\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-col justify-end flex-1\">\n\t\t\t\t<Disclaimer className=\"pt-6\" />\n\t\t\t</div>\n\t\t</div>;\n}\n_s(Index, \"SDxCBuYE3HxGGes0Co/h2C9B78g=\", false, function () {\n  return [useLoaderData, useUserMetadata];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,wBAA+B;AAS/B,yBAAwB;AAgCrB;AA7DH,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAkCe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,gBAAgB,QAAQ;AAC5B,SAAO,mDAAC,SAAI,WAAU,gEACrB;AAAA,uDAAC,SAAI,WAAU,YAAf;AAAA;AAAA;AAAA;AAAA,WAAwB;AAAA,IACxB,mDAAC,SAAI,WAAU,aACd;AAAA,yDAAC,SACA;AAAA,2DAAC,QAAG,WAAU,sBAAqB,sCAAnC;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,QAClD,mDAAC,SAAI,WAAU,2CACd;AAAA,6DAAC,OAAE,WAAU,4CAA2C;AAAA;AAAA,YACzC,6BAAM;AAAA,eADrB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACC,CAAC,cAAc,mDAAC,OAAE,WAAU,yGAAwG,MAAK,iBAAgB,sBAA1I;AAAA;AAAA;AAAA;AAAA,iBAEf;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,WATD;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MACA,mDAAC,SACA,6DAAC,cAAW,IAAG,QAAO,WAAU,WAAU,wBAA1C;AAAA;AAAA;AAAA;AAAA,aAEA,KAHD;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,aAAQ,WAAU,kBAClB;AAAA,2DAAC,aAAQ,WAAU,oCAAmC,8BAAtD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,QAAK,WAAU,oCAAmC,QAAO,QACzD;AAAA,6DAAC,SAAI,WAAU,aACd;AAAA,+DAAC,SAAM,SAAQ,QAAO,yBAAtB;AAAA;AAAA;AAAA;AAAA,mBAA+B;AAAA,YAC/B,mDAAC,SAAM,MAAK,QAAO,IAAG,QAAO,UAAQ,QAArC;AAAA;AAAA;AAAA;AAAA,mBAAsC;AAAA,eAFvC;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,UACA,mDAAC,UAAO,WAAU,WAAU,MAAK,UAAS,aAAY,aAAY,oBAAlE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAPD;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,WAZD;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,SA9BD;AAAA;AAAA;AAAA;AAAA,WA+BA;AAAA,IACA,mDAAC,SAAI,WAAU,oCACd,6DAAC,cAAW,WAAU,UAAtB;AAAA;AAAA;AAAA;AAAA,WAA6B,KAD9B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OApCM;AAAA;AAAA;AAAA;AAAA,SAqCP;AACF;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,eAAe,eAAe;AACxC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
